name: Build Electron App for Windows

on:
  push:
    branches:
      - simple
  pull_request:

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Build Electron app
        run: |
            npx electron --version
            node run/get_electron_version.js
            $electronVersion=(npx electron --version)
            echo "1_$electronVersion _"
            $electronVersion=(npx electron --version).Substring(2)
            $electronVersion2=(node -e 'console.log(process.argv)' "$electronVersion")
            echo "2_$electronVersion2 _"
    
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: |
            $electronVersion=(npx electron --version)
            $electronVersion=(node -e 'console.log(process.argv[1].match(/\d+.+/)[0])' $electronVersion)
            echo "_$electronVersion _"
            npx electron-packager . ExampleApp --electron-version "38.1.2" `
                --out=dist --overwrite `
                --ignore="^^(?!main||node_modules||package.json||package.json||package-lock.json||.*/main||.*/node_modules||.*/package.json||.*/package.json||.*/package-lock.json)(.+)$"

        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/**/*.exe
